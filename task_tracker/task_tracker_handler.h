// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.
#ifndef NTU_CAP_UNICAP_TASK_TRACKER_TASK_TRACKER_HANDLER_H
#define NTU_CAP_UNICAP_TASK_TRACKER_TASK_TRACKER_HANDLER_H

#include "../gen/TaskTracker.h"
#include "../common/node_info.h"

namespace ntu {
namespace cap {

class TaskTrackerHandler : virtual public TaskTrackerIf {
public:
  TaskTrackerHandler() {
    // Your initialization goes here
  }

  int64_t create_table(const TableProperty& table_property) {
    // Your implementation goes here
    printf("create_table\n");
  }

private:
};

} //end namespace ntu
} //end namespace cap
#endif

//std::map<int64_t, TaskTrackerInfo> & _return
//boost::shared_ptr<UnicapClient<JobTrackerClient>> _client;
